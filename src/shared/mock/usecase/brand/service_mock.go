// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	app_context "github.com/iqbalnzls/watchcommerce/src/shared/app_context"

	dto "github.com/iqbalnzls/watchcommerce/src/dto"

	mock "github.com/stretchr/testify/mock"
)

// BrandServiceIFaceMock is an autogenerated mock type for the ServiceIFace type
type BrandServiceIFaceMock struct {
	mock.Mock
}

type BrandServiceIFaceMock_Expecter struct {
	mock *mock.Mock
}

func (_m *BrandServiceIFaceMock) EXPECT() *BrandServiceIFaceMock_Expecter {
	return &BrandServiceIFaceMock_Expecter{mock: &_m.Mock}
}

// Save provides a mock function with given fields: appCtx, req
func (_m *BrandServiceIFaceMock) Save(appCtx *app_context.AppContext, req *dto.CreateBrandRequest) error {
	ret := _m.Called(appCtx, req)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*app_context.AppContext, *dto.CreateBrandRequest) error); ok {
		r0 = rf(appCtx, req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// BrandServiceIFaceMock_Save_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Save'
type BrandServiceIFaceMock_Save_Call struct {
	*mock.Call
}

// Save is a helper method to define mock.On call
//   - appCtx *app_context.AppContext
//   - req *dto.CreateBrandRequest
func (_e *BrandServiceIFaceMock_Expecter) Save(appCtx interface{}, req interface{}) *BrandServiceIFaceMock_Save_Call {
	return &BrandServiceIFaceMock_Save_Call{Call: _e.mock.On("Save", appCtx, req)}
}

func (_c *BrandServiceIFaceMock_Save_Call) Run(run func(appCtx *app_context.AppContext, req *dto.CreateBrandRequest)) *BrandServiceIFaceMock_Save_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*app_context.AppContext), args[1].(*dto.CreateBrandRequest))
	})
	return _c
}

func (_c *BrandServiceIFaceMock_Save_Call) Return(err error) *BrandServiceIFaceMock_Save_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *BrandServiceIFaceMock_Save_Call) RunAndReturn(run func(*app_context.AppContext, *dto.CreateBrandRequest) error) *BrandServiceIFaceMock_Save_Call {
	_c.Call.Return(run)
	return _c
}

// NewBrandServiceIFaceMock creates a new instance of BrandServiceIFaceMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBrandServiceIFaceMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *BrandServiceIFaceMock {
	mock := &BrandServiceIFaceMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
