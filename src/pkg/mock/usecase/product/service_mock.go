// Code generated by mockery v2.13.0. DO NOT EDIT.

package mocks

import (
	dto "github.com/iqbalnzls/watchcommerce/src/dto"
	mock "github.com/stretchr/testify/mock"
)

// ProductServiceIFaceMock is an autogenerated mock type for the ProductServiceIFace type
type ProductServiceIFaceMock struct {
	mock.Mock
}

// Get provides a mock function with given fields: req
func (_m *ProductServiceIFaceMock) Get(req *dto.GetProductRequest) (dto.GetProductResponse, error) {
	ret := _m.Called(req)

	var r0 dto.GetProductResponse
	if rf, ok := ret.Get(0).(func(*dto.GetProductRequest) dto.GetProductResponse); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Get(0).(dto.GetProductResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*dto.GetProductRequest) error); ok {
		r1 = rf(req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByBrandID provides a mock function with given fields: req
func (_m *ProductServiceIFaceMock) GetByBrandID(req *dto.GetProductByBrandIDRequest) ([]dto.GetProductResponse, error) {
	ret := _m.Called(req)

	var r0 []dto.GetProductResponse
	if rf, ok := ret.Get(0).(func(*dto.GetProductByBrandIDRequest) []dto.GetProductResponse); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]dto.GetProductResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*dto.GetProductByBrandIDRequest) error); ok {
		r1 = rf(req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: req
func (_m *ProductServiceIFaceMock) Save(req *dto.CreateProductRequest) error {
	ret := _m.Called(req)

	var r0 error
	if rf, ok := ret.Get(0).(func(*dto.CreateProductRequest) error); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
