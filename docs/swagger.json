{
    "swagger": "2.0",
    "info": {
        "description": "This is api documentation for watchcommerce.",
        "title": "Watchcommerce API Documentation",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/api/v1/brand/save": {
            "post": {
                "description": "API for save new brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brand"
                ],
                "summary": "Save brand",
                "parameters": [
                    {
                        "description": "payload for save new brand",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateBrandRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization for swagger purpose",
                        "name": "Authorization-Swagger",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/order/get": {
            "get": {
                "description": "API for get new order by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get order by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.GetOrderResponse"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/order/save": {
            "post": {
                "description": "API for create new order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create order",
                "parameters": [
                    {
                        "description": "payload for create new order",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateOrderRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization for swagger purpose",
                        "name": "Authorization-Swagger",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/product/brand/get": {
            "get": {
                "description": "API for get new product by brand id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get product by brandID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "brand id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.GetProductResponse"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/product/get": {
            "get": {
                "description": "API for get new product by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get product by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.GetProductResponse"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/product/save": {
            "post": {
                "description": "API for save new product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Save product",
                "parameters": [
                    {
                        "description": "payload for save new product",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateProductRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization for swagger purpose",
                        "name": "Authorization-Swagger",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BaseResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.BaseResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Success"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "dto.CreateBrandRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "rolex"
                }
            }
        },
        "dto.CreateOrderRequest": {
            "type": "object",
            "properties": {
                "orderDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.OrderDetailsRequest"
                    }
                }
            }
        },
        "dto.CreateProductRequest": {
            "type": "object",
            "required": [
                "brandID",
                "name",
                "price",
                "quantity"
            ],
            "properties": {
                "brandID": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "g-shock"
                },
                "price": {
                    "type": "integer",
                    "example": 12000000
                },
                "quantity": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "dto.GetOrderResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.OrderDetailsResponse"
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 11
                },
                "total": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "dto.GetProductResponse": {
            "type": "object",
            "properties": {
                "brandID": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "daytona"
                },
                "price": {
                    "type": "integer",
                    "example": 1000
                },
                "quantity": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "dto.OrderDetailsRequest": {
            "type": "object",
            "required": [
                "productID",
                "quantity"
            ],
            "properties": {
                "productID": {
                    "type": "integer",
                    "example": 1
                },
                "quantity": {
                    "type": "integer",
                    "example": 12
                }
            }
        },
        "dto.OrderDetailsResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "orderID": {
                    "type": "integer",
                    "example": 12
                },
                "price": {
                    "type": "integer",
                    "example": 13400990
                },
                "productID": {
                    "type": "integer",
                    "example": 4
                },
                "quantity": {
                    "type": "integer",
                    "example": 3
                }
            }
        }
    }
}